enabled: true

replicaCount: 1

ExternalSecret:
  enabled: false
  type: "hashicorp"
  kvPath: 
    - shiftlabsdev/dev/
  name: vault-backend

image:
  repository: wrongimage
  pullPolicy: Always
  tag: ""

imagePullSecrets:
  - name: registry-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}
env: {}

securityContext: {}

service:
  type: ClusterIP
  loadBalancerIP: ""
  ports: 
    - port: 80
      name: http
      protocol: TCP
    - port: 8080
      name: custom-port-1
      protocol: TCP

init:
  enabled: false

extraInitContainers: []
  # - name: "init-container"
  #   image: "busybox"
  #   command: ["sh"]
  #   args: ['-c', 'echo "INIT1"']
  # - name: "init-container2"
  #   image: "busybox"
  #   command: ["sh"]
  #   args: ['-c', 'echo "INIT2"']
  # - name: "plugin-install-mapper-size"
  #   image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.0"
  #   command: ["/bin/bash"]
  #   args: ["-c", "yes | /usr/share/elasticsearch/bin/elasticsearch-plugin install mapper-size"]

postStart: []
  # exec:
  #   command: ["sh", "-c", "echo Hello from postStart"]

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "false"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    nginx.ingress.kubernetes.io/proxy-ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/canary: "false"
    nginx.ingress.kubernetes.io/canary-weight: "100"
  hosts:
    - host: fqdn.shiftlabs.dev
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: shiftlabsdev-ssl-cert
      hosts:
        - fqdn.shiftlabs.dev

ingressGRPC:
  enabled: false
  className: “”
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: “true”
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: “false”
    nginx.ingress.kubernetes.io/from-to-www-redirect: “false”
    nginx.ingress.kubernetes.io/ssl-ciphers: “ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384”
    nginx.ingress.kubernetes.io/proxy-ssl-protocols: “TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/canary: “false”
    nginx.ingress.kubernetes.io/canary-weight: “100"
    nginx.ingress.kubernetes.io/backend-protocol: “GRPC”
  hosts:
    - host: fqdn.shiftlabs.dev
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: shiftlabsdev-ssl-cert
      hosts:
        - fqdn.shiftlabs.dev

http: 
  enabled: true
  startupProbe:
    initialDelaySeconds: 5
    path: /
    port: 80
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  livenessProbe:
    initialDelaySeconds: 5
    path: /
    port: 80
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 5
    path: /
    port: 80
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

tcp: 
  enabled: false
  startupProbe:
    initialDelaySeconds: 5
    port: 5514
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  livenessProbe:
    initialDelaySeconds: 5
    port: 5514
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 5
    port: 5514
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

resources:
  limits:
    cpu: 350m
    memory: 350Mi
  requests:
    cpu: 250m
    memory: 250Mi

autoscaling:
  enabled: true
  type: "keda"
  minReplicas: "1"
  maxReplicas: "1"
  targetCPUUtilizationPercentage: "85"
  targetMemoryUtilizationPercentage: "85"

configmap:
  enabled: false
  keyValues:
    SPECIAL_KEY1: SPECIAL_KEY1
    SPECIAL_KEY2: SPECIAL_KEY2
  fileData:
    - fileName: custom-config1.yaml
      mountPath: /tmp
      content: |-
        key1: value1
        key2: value2
    - fileName: custom-config2.yaml
      mountPath: /tmp
      content: |-
        key3: value3
        key4: value4

nodeSelector: {}

tolerations: []

affinity: {}
