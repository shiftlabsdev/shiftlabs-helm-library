{{- $fullName := include "deployment.fullname" . -}}
{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment.fullname" . }}
  labels:
    {{- include "deployment.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deployment.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deployment.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.init.enabled }}
      initContainers: 
        {{- range .Values.extraInitContainers }}
        - name: "{{ .name }}"
          image: "{{ .image }}"
          command: {{ .command | toJson }}
          args: {{ .args | toJson }}
        {{- end }}
      {{- end }}  
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          {{- if .Values.configmap.enabled }}
          - configMapRef:
              name: {{ include "deployment.fullname" . }}
          {{- end }}
          {{- if .Values.ExternalSecret.enabled }}
          - secretRef:
              name: {{ include "deployment.fullname" . }}
          {{- end }}
          # volumeMounts:
          #   - mountPath: "/tmp/secret"
          #     name: {{ include "deployment.fullname" . }}
          #     readOnly: true
          {{- if .Values.configmap.enabled }}
          volumeMounts:
          {{- range .Values.configmap.fileData }}
          - name: custom-config-volume-{{ .fileName | replace ".yaml" "" }}
            mountPath: {{ .mountPath }}
          {{- end }}
          {{- end }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}
            {{- end }}
          {{- with .Values.postStart }}
          lifecycle:
            postStart:
              {{ . | toYaml | nindent 20 }}
          {{- end }}
          {{- if .Values.http.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.http.startupProbe.path }}
              port: {{ .Values.http.startupProbe.port }}
            failureThreshold: {{ .Values.http.startupProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.http.startupProbe.initialDelaySeconds }}              
            periodSeconds: {{ .Values.http.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.http.startupProbe.successThreshold }}
            timeoutSeconds: {{ .Values.http.startupProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.http.livenessProbe.path }}
              port: {{ .Values.http.livenessProbe.port }}
            failureThreshold: {{ .Values.http.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.http.livenessProbe.initialDelaySeconds }}                
            periodSeconds: {{ .Values.http.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.http.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.http.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.http.readinessProbe.path }}
              port: {{ .Values.http.readinessProbe.port }}
            failureThreshold: {{ .Values.http.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.http.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.http.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.http.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.http.readinessProbe.timeoutSeconds }}
          {{- end }}  
          {{- if .Values.tcp.enabled }}  
          startupProbe:
            tcpSocket:
              port: {{ .Values.tcp.startupProbe.port }}
            failureThreshold: {{ .Values.tcp.startupProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.tcp.startupProbe.initialDelaySeconds }}              
            periodSeconds: {{ .Values.tcp.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.tcp.startupProbe.successThreshold }}
            timeoutSeconds: {{ .Values.tcp.startupProbe.timeoutSeconds }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.tcp.livenessProbe.port }}
            failureThreshold: {{ .Values.tcp.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.tcp.livenessProbe.initialDelaySeconds }}                
            periodSeconds: {{ .Values.tcp.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.tcp.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.tcp.livenessProbe.timeoutSeconds }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.tcp.readinessProbe.port }}
            failureThreshold: {{ .Values.tcp.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.tcp.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.tcp.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.tcp.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.tcp.readinessProbe.timeoutSeconds }}
          {{- end }}         
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      # volumes:
      # - name: {{ include "deployment.fullname" . }}
      #   secret:
      #     secretName: {{ include "deployment.fullname" . }}
      {{- if .Values.configmap.enabled }}
      volumes:
      {{- range .Values.configmap.fileData }}
      - name: custom-config-volume-{{ .fileName | replace ".yaml" "" }}
        configMap:
          name: {{ $fullName }}
          items:
          - key: {{ .fileName }}
            path: {{ .fileName }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}